plugins {
    id "java"
    id "java-test-fixtures"
    id "tanagra.java-conventions"
    id "com.google.protobuf" version "0.9.4"
}

sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        url "https://broadinstitute.jfrog.io/broadinstitute/libs-release/"
    }
    maven {
        url "https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/"
    }
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

dependencies {
    implementation group: "bio.terra", name: "terra-common-lib", version: "0.0.69-SNAPSHOT"
    implementation group: "org.apache.commons", name: "commons-text", version: "1.9"
    testFixturesImplementation group: "org.slf4j", name: "slf4j-api", version: "1.7.25"

    // GCP libraries. Versions are controlled by the BOM specified in buildSrc.
    implementation group: "com.google.cloud", name: "google-cloud-bigquery"
    implementation group: "com.google.cloud", name: "google-cloud-storage"
    implementation group: "com.google.guava", name: "guava"

    // Jackson serialization
    implementation group: "com.fasterxml.jackson.core", name: "jackson-core", version: "2.12.3"
    implementation group: "com.fasterxml.jackson.datatype", name: "jackson-datatype-jsr310", version: "2.12.3"

    // SQL formatting
    implementation group: "org.hibernate", name: "hibernate-core", version: "5.3.30.Final"

    // JUnit
    testImplementation group: "org.junit.jupiter", name: "junit-jupiter-api", version: "5.0.3"
    testRuntimeOnly group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "5.0.3"
    testFixturesImplementation group: "org.junit.jupiter", name: "junit-jupiter-api", version: "5.0.3"

    // Static analysis
    compileOnly group: "com.google.code.findbugs", name: "annotations", version: "3.0.1u2"
    testCompileOnly group: "com.google.code.findbugs", name: "annotations", version: "3.0.1u2"
}

protobuf {
    // Configure the protoc executable
    protoc {
        // This executable is downloaded from Maven.
        // The version here must match the Google Cloud libraries BOM specified in the buildSrc Gradle sub-project.
        // https://cloud.google.com/java/docs/bom
        // This com.google.protobuf plugin does not yet support using a BOM.
        // https://github.com/google/protobuf-gradle-plugin/issues/412
        // So we have to manually keep this version in sync, by referencing the BOM dashboard.
        // https://storage.googleapis.com/cloud-opensource-java-dashboard/com.google.cloud/libraries-bom/index.html
        artifact = "com.google.protobuf:protoc:3.23.2"
    }
    // By default, the proto plugin generates Java classes in the build/classes/ directory.
    // generatedFilesBaseDir = "$projectDir/src/generated"
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    // These System properties are used for the generated SQL strings to compare against during tests.
    // See bio.terra.tanagra.testing.GeneratedSqlUtils for how they are used.
    systemProperty("GRADLE_PROJECT_DIR", projectDir)
    if (project.findProperty("generateSqlFiles")) {
        systemProperty("GENERATE_SQL_FILES", "true")
    }
    systemProperty("IS_TEST", true)
}

task noCloudAccessRequiredTests(type: Test) {
    useJUnitPlatform {
        excludeTags "requires-cloud-access"
    }
}

// Apply Gradle Script Plugins for more modular gradle files.
// See also https://docs.gradle.org/current/userguide/plugins.html#sec:script_plugins
apply from: "$rootDir/underlay/gradle/task-dependencies.gradle"
