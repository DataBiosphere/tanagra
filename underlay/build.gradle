plugins {
    id 'tanagra.java-conventions'
    id 'com.google.protobuf' version '0.9.4'
}

sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

dependencies {
    implementation "com.fasterxml.jackson.core:jackson-core:${gradle.vJackson}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${gradle.vJackson}"
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'

    implementation "org.apache.commons:commons-text:${gradle.vApacheCommonsText}"
    testFixturesImplementation "org.slf4j:slf4j-api:${gradle.vSlf4jApi}"

    // GCP libraries versions are controlled by the BOM specified in buildSrc.
    implementation 'com.google.cloud:google-cloud-bigquery'
    implementation 'com.google.cloud:google-cloud-storage'
    implementation 'com.google.guava:guava'

    // SQL formatting
    implementation 'org.hibernate.orm:hibernate-core:6.5.2.Final'

    // JUnit
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${gradle.vJunit5}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${gradle.vJunit5}"
    testFixturesImplementation "org.junit.jupiter:junit-jupiter-api:${gradle.vJunit5}"

    // Static analysis
    pmd "net.sourceforge.pmd:pmd-ant:${gradle.vPmd}"
    compileOnly "com.github.spotbugs:spotbugs-annotations:${gradle.vSpotBugs}"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:${gradle.vSpotBugs}"
}

protobuf {
    // Configure the protoc executable
    protoc {
        // This executable is downloaded from Maven.
        // The version here must match the Google Cloud libraries BOM specified in the buildSrc Gradle sub-project.
        // https://cloud.google.com/java/docs/bom
        // This com.google.protobuf plugin does not yet support using a BOM.
        // https://github.com/google/protobuf-gradle-plugin/issues/412
        // So we have to manually keep this version in sync, by referencing the BOM dashboard.
        // https://storage.googleapis.com/cloud-opensource-java-dashboard/com.google.cloud/libraries-bom/index.html
        artifact = 'com.google.protobuf:protoc:3.25.3'
    }
    // By default, the proto plugin generates Java classes in the build/classes/ directory.
    // generatedFilesBaseDir = "$projectDir/src/generated"

    plugins {
        doc {
            artifact = "io.github.pseudomuto:protoc-gen-doc:1.5.1"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                doc {
                    option 'markdown,PROTOCOL_BUFFERS.md'
                }
            }
        }
    }
}

tasks.withType(Test).configureEach {
    // These System properties are used for the generated SQL strings to compare against during tests.
    // See bio.terra.tanagra.testing.GeneratedSqlUtils for how they are used.
    systemProperty('GRADLE_PROJECT_DIR', projectDir)
    if (project.findProperty('generateSqlFiles')) {
        systemProperty('GENERATE_SQL_FILES', 'true')
    }
    systemProperty('IS_TEST', true)
}

tasks.register('copyProtoDocs', Copy) {
    from "${buildDir}/generated/source/proto/main/doc/"
    into "${projectDir}/../docs/generated/";
    dependsOn generateProto
}

apply from: "${rootDir}/gradle/spotless-dependencies.gradle"
