plugins {
    id 'java'
    id 'java-test-fixtures'
    id 'pmd'

    id 'tanagra.java-conventions'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.google.protobuf' version '0.9.4'
}

sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        mavenBom 'io.opentelemetry:opentelemetry-bom:1.38.0'
        mavenBom 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:2.4.0-alpha'
    }
    dependencies {
        dependency "io.swagger.core.v3:swagger-annotations:${gradle.vSwaggerAnnotations}"
    }
}

dependencies {
    pmd "net.sourceforge.pmd:pmd-ant:${gradle.vPmd}"
    pmdAux("io.swagger.core.v3:swagger-annotations:${gradle.vSwaggerAnnotations}")

    implementation "io.swagger.core.v3:swagger-annotations:${gradle.vSwaggerAnnotations}"

    implementation "com.fasterxml.jackson.core:jackson-core:${gradle.vJackson}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${gradle.vJackson}"

    implementation "org.apache.commons:commons-text:${gradle.vApacheCommonsText}"
    testFixturesImplementation "org.slf4j:slf4j-api:${gradle.vSlf4jApi}"

    // Spring version controlled dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter'

    implementation("bio.terra:terra-common-lib:${gradle.vTerraCommonLib}") {
        exclude group: 'io.swagger', module: 'swagger-annotations'
    }

    // GCP libraries versions are controlled by the BOM specified in buildSrc.
    implementation 'com.google.cloud:google-cloud-bigquery'
    implementation 'com.google.cloud:google-cloud-storage'
    implementation 'com.google.guava:guava'

    // SQL formatting
    implementation 'org.hibernate.orm:hibernate-core:6.5.2.Final'

    // Spring version controlled JUnit dependencies
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testFixturesImplementation 'org.junit.jupiter:junit-jupiter-api'

    // Static analysis
    compileOnly "com.github.spotbugs:spotbugs-annotations:${gradle.vSpotBugs}"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:${gradle.vSpotBugs}"
}

protobuf {
    // Configure the protoc executable
    protoc {
        // This executable is downloaded from Maven.
        // The version here must match the Google Cloud libraries BOM specified in the buildSrc Gradle sub-project.
        // https://cloud.google.com/java/docs/bom
        // This com.google.protobuf plugin does not yet support using a BOM.
        // https://github.com/google/protobuf-gradle-plugin/issues/412
        // So we have to manually keep this version in sync, by referencing the BOM dashboard.
        // https://storage.googleapis.com/cloud-opensource-java-dashboard/com.google.cloud/libraries-bom/index.html
        artifact = 'com.google.protobuf:protoc:3.25.3'
    }
}

tasks.withType(Test).configureEach {
    // These System properties are used for the generated SQL strings to compare against during tests.
    // See bio.terra.tanagra.testing.GeneratedSqlUtils for how they are used.
    systemProperty('GRADLE_PROJECT_DIR', projectDir)
    if (project.findProperty('generateSqlFiles')) {
        systemProperty('GENERATE_SQL_FILES', 'true')
    }
    systemProperty('IS_TEST', true)
}

apply from: "${rootDir}/gradle/spotless-dependencies.gradle"
