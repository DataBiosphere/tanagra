openapi: 3.0.3
info:
  title: Tanagra Service API
  description: github.com/DataBiosphere/tanagra
  version: 0.0.0

servers:
  - url: /

paths:
  '/status':
    get:
      security: []
      summary: Returns the operational status of the service
      operationId: serviceStatus
      tags: [Unauthenticated]
      responses:
        200:
          description: Service can process requests
        500:
          description: Service is broken

  # TODO implement "real" export endpoints
  '/underlays/{underlay}/entities/{entity}/dataset:generateSqlQuery':
    parameters:
      - $ref: '#/components/parameters/Underlay'
      - $ref: '#/components/parameters/Entity'
    post:
      # TODO authorization
      security: [ ]
      summary: Returns an SQL query for selecting a dataset of an Entity's attributes.
      operationId: generateSqlQuery
      tags: [EntitiesDataset]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityDataset'
        responses:
          200:
            $ref: '#/components/responses/SqlQueryResponse'


  # TODO implement "real" export endpoints
  '/underlays/{underlay}/entities/{entity}/filters:generateSqlQuery':
    parameters:
      - $ref: '#/components/parameters/Underlay'
      - $ref: '#/components/parameters/Entity'
    post:
      # TODO authorization
      security: []
      summary: Returns an SQL query for listing all of an Entity's primary keys.
      operationId: generateSqlQuery
      tags: [EntitiesFilters]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityFilter'
      responses:
        200:
          $ref: '#/components/responses/SqlQueryResponse'

components:
  parameters:
    Underlay:
      name: underlayName
      in: path
      description: The name of the dataset underlay.
      required: true
      schema:
        type: string

    Entity:
      name: entityName
      in: path
      description: The name of an entity.
      required: true
      schema:
        type: string

  responses:
    SqlQueryResponse:
      description: A raw SQL query.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SqlQuery'

  schemas:
    AttributeVariable:
      description: An attribute of a variable for an entity.
      type: object
      required: [name, variable]
      properties:
        name:
          description: The name of the attribute.
          type: string
        variable:
          description: The name of the variable.
          type: string

    AttributeValue:
      type: object
      description: A possible value of an attribute. Exactly one field must be specified.
      properties:
        int64Val:
          type: integer
          format: int64
        stringVal:
          type: string
        boolVal:
          type: boolean

    EntityDataset:
      description: A selection of entity attributes and filters on them.
      type: object
      properties:
        entityVariable:
          description: The variable to use for the top level entity in the filter.
          type: string
        attributes:
          description: The name of the attributes to select for the dataset.
          type: array
          items:
            type: string
        filter:
          $ref: '#/components/schemas/Filter'

    EntityFilter:
      description: A filter to apply to the given entity.
      type: object
      properties:
        entityVariable:
          description: The variable to use for the top level entity in the filter.
          type: string
        filter:
          $ref: '#/components/schemas/Filter'

    SqlQuery:
      type: object
      description: A raw SQL query.
      properties:
        # TODO consider deleting this object.
        # TODO consider parameterizing the query
        # TODO consider indicating the database this is generated for.
        query:
          type: string

    # Filters
    Filter:
      type: object
      description: |
        Base Filter type that contains one-of any Filter subtype.
        OpenApi inheritance and one-of code generation support are not great, so we roll our own.
      properties:
        arrayFilter:
          $ref: '#/components/schemas/ArrayFilter'
        binaryFilter:
          $ref: '#/components/schemas/BinaryFilter'
        relationshipFilter:
          $ref: '#/components/schemas/RelationshipFilter'
        # TODO allow aggregations in filters.

    ArrayFilter:
      type: object
      description: A filter function for operating on N operands.
      properties:
        operands:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        operator:
          $ref: '#/components/schemas/ArrayFilterOperator'

    ArrayFilterOperator:
      description: Enum for array function operators
      type: string
      enum: ['AND', 'OR']

    BinaryFilter:
      type: object
      description: |
        A binary filter function. Function ordered as `attributeVariable operator attributeValue`
      # TODO allow comparing two AttributeVariables
      properties:
        attributeVariable:
          $ref: '#/components/schemas/AttributeVariable'
        operator:
          $ref: '#/components/schemas/BinaryFilterOperator'
        attributeValue:
          $ref: '#/components/schemas/AttributeValue'

    BinaryFilterOperator:
      description: Enum for binary function operators
      type: string
      enum: ['EQUALS', 'LESS_THAN']

    RelationshipFilter:
      type: object
      description: |
        A filter that requires a relationship between an entity variable and another entity.
      properties:
        outerVariable:
          description: |
            A variable that already exists that must have the relationship described by this filter.
          type: string
        newVariable:
          description: The name of the new variable that must be related to the outerVariable.
          type: string
        newEntity:
          description: The name of the type of entity the newVariable is.
          type: string
        filter:
          $ref: '#/components/schemas/Filter'


    ErrorReport:
      type: object
      required: [message, statusCode, causes]
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string