{
  "name" : "observation",
  "idAttribute" : "id",
  "attributes" : [ {
    "type" : "KEY_AND_DISPLAY",
    "name" : "standard_concept",
    "dataType" : "STRING",
    "displayHint" : {
      "type" : "ENUM",
      "valueDisplays" : [ {
        "value" : {
          "stringVal" : "S"
        },
        "display" : "Standard"
      } ]
    }
  }, {
    "type" : "SIMPLE",
    "name" : "vocabulary",
    "dataType" : "STRING",
    "displayHint" : {
      "type" : "ENUM",
      "valueDisplays" : [ {
        "value" : {
          "stringVal" : "APC"
        },
        "display" : "APC"
      }, {
        "value" : {
          "stringVal" : "CPT4"
        },
        "display" : "CPT4"
      }, {
        "value" : {
          "stringVal" : "DRG"
        },
        "display" : "DRG"
      }, {
        "value" : {
          "stringVal" : "HCPCS"
        },
        "display" : "HCPCS"
      }, {
        "value" : {
          "stringVal" : "ICDO3"
        },
        "display" : "ICDO3"
      }, {
        "value" : {
          "stringVal" : "LOINC"
        },
        "display" : "LOINC"
      }, {
        "value" : {
          "stringVal" : "MDC"
        },
        "display" : "MDC"
      }, {
        "value" : {
          "stringVal" : "NAACCR"
        },
        "display" : "NAACCR"
      }, {
        "value" : {
          "stringVal" : "NUCC"
        },
        "display" : "NUCC"
      }, {
        "value" : {
          "stringVal" : "Nebraska Lexicon"
        },
        "display" : "Nebraska Lexicon"
      }, {
        "value" : {
          "stringVal" : "OMOP Extension"
        },
        "display" : "OMOP Extension"
      }, {
        "value" : {
          "stringVal" : "OPCS4"
        },
        "display" : "OPCS4"
      }, {
        "value" : {
          "stringVal" : "PCORNet"
        },
        "display" : "PCORNet"
      }, {
        "value" : {
          "stringVal" : "SNOMED"
        },
        "display" : "SNOMED"
      }, {
        "value" : {
          "stringVal" : "SNOMED Veterinary"
        },
        "display" : "SNOMED Veterinary"
      }, {
        "value" : {
          "stringVal" : "UB04 Pri Typ of Adm"
        },
        "display" : "UB04 Pri Typ of Adm"
      }, {
        "value" : {
          "stringVal" : "UK Biobank"
        },
        "display" : "UK Biobank"
      } ]
    }
  }, {
    "type" : "SIMPLE",
    "name" : "name",
    "dataType" : "STRING"
  }, {
    "type" : "SIMPLE",
    "name" : "concept_code",
    "dataType" : "STRING"
  }, {
    "type" : "SIMPLE",
    "name" : "id",
    "dataType" : "INT64"
  } ],
  "sourceDataMapping" : {
    "dataPointer" : "omop_dataset",
    "tablePointer" : {
      "table" : "concept",
      "filter" : {
        "type" : "ARRAY",
        "operator" : "AND",
        "subfilters" : [ {
          "type" : "BINARY",
          "field" : {
            "column" : "domain_id"
          },
          "operator" : "EQUALS",
          "value" : {
            "stringVal" : "Observation"
          }
        }, {
          "type" : "BINARY",
          "field" : {
            "column" : "standard_concept"
          },
          "operator" : "EQUALS",
          "value" : {
            "stringVal" : "S"
          }
        }, {
          "type" : "BINARY",
          "field" : {
            "column" : "vocabulary_id"
          },
          "operator" : "NOT_EQUALS",
          "value" : {
            "stringVal" : "PPI"
          }
        }, {
          "type" : "BINARY",
          "field" : {
            "column" : "concept_class_id"
          },
          "operator" : "NOT_EQUALS",
          "value" : {
            "stringVal" : "Survey"
          }
        } ]
      }
    },
    "attributeMappings" : {
      "standard_concept" : {
        "value" : {
          "column" : "standard_concept"
        },
        "display" : {
          "column" : "standard_concept",
          "sqlFunctionWrapper" : "(CASE WHEN ${fieldSql} IS NULL THEN 'Source' WHEN ${fieldSql} = 'S' THEN 'Standard' ELSE 'Unknown' END)"
        }
      },
      "vocabulary" : {
        "value" : {
          "column" : "vocabulary_id"
        }
      },
      "name" : {
        "value" : {
          "column" : "concept_name"
        }
      },
      "concept_code" : {
        "value" : {
          "column" : "concept_code"
        }
      },
      "id" : {
        "value" : {
          "column" : "concept_id"
        }
      }
    },
    "textSearchMapping" : {
      "searchStringTable" : {
        "tablePointer" : {
          "rawSql" : "SELECT textsearch.id, textsearch.text FROM (      SELECT       c.concept_id AS id, c.concept_name AS text     FROM  `victr-tanagra-test.sd_static.concept` c      UNION ALL      SELECT       c.concept_id AS id, CAST(c.concept_id AS STRING) AS text     FROM  `victr-tanagra-test.sd_static.concept` c      UNION ALL      SELECT       c.concept_id AS id, c.concept_code AS text     FROM  `victr-tanagra-test.sd_static.concept` c ) AS textsearch  JOIN `victr-tanagra-test.sd_static.concept` c ON c.concept_id = textsearch.id  WHERE c.domain_id = 'Observation' AND c.standard_concept = 'S' AND c.vocabulary_id != 'PPI' AND c.concept_class_id != 'Survey'"
        },
        "fieldPointers" : {
          "id" : {
            "column" : "id"
          },
          "text" : {
            "column" : "text"
          }
        }
      }
    },
    "hierarchyMappings" : { }
  },
  "indexDataMapping" : {
    "dataPointer" : "index_dataset",
    "tablePointer" : {
      "table" : "observation"
    },
    "attributeMappings" : {
      "standard_concept" : {
        "value" : {
          "column" : "standard_concept"
        },
        "display" : {
          "column" : "t_display_standard_concept"
        }
      },
      "vocabulary" : {
        "value" : {
          "column" : "vocabulary"
        }
      },
      "name" : {
        "value" : {
          "column" : "name"
        }
      },
      "concept_code" : {
        "value" : {
          "column" : "concept_code"
        }
      },
      "id" : {
        "value" : {
          "column" : "id"
        }
      }
    },
    "textSearchMapping" : {
      "searchString" : {
        "column" : "id",
        "foreignTable" : "observation_textsearch",
        "foreignKey" : "id",
        "foreignColumn" : "text"
      }
    },
    "hierarchyMappings" : { }
  }
}