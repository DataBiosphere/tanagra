# This workflow builds a docker image with jib and pushes it to Github Container Repository.

name: Build & Push API image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to tag the image with, e.g. "1.2.3"'
        required: true

env:
  GCR_PROJECT: broad-dsp-gcr-public

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Auth with gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GCR_PUBLISH_EMAIL }}
          service_account_key: ${{ secrets.GCR_PUBLISH_KEY }}
      - name: Auth Docker for gcloud
        run: "gcloud auth configure-docker --quiet"
      - name: Set up AdoptOpenJDK 11
        uses: joschi/setup-jdk@v2
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: v1-${{ runner.os }}-gradle-${{ hashfiles('**/gradle-wrapper.properties') }}
      - name: Construct docker image name
        id: image-name
        run: |
          echo ::set-output name=name::gcr.io/${GCR_PROJECT}/tanagra-api:${{ github.event.inputs.version }}
      - name: Build image locally with jib
        working-directory: api
        run: "./gradlew jibDockerBuild --image=${{ steps.image-name.outputs.name }} -Djib.console=plain --stacktrace"
      - name: Push image
        working-directory: api
        run: "echo ${{ steps.image-name.outputs.name }}"
