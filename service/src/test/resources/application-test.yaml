tanagra:
  underlay:
    # TODO: Separate out test profiles per env. For now, this works because we're just generate SQL strings, and not using credentials to actually run the queries against BQ.
    files: [ "broad/aou_synthetic/expanded/aou_synthetic.json", "broad/cms_synpuf/expanded/cms_synpuf.json", "verily/sdd/expanded/sdd.json" ]

  feature:
    artifact-storage-enabled: true

  db:
    initialize-on-start: true
    upgrade-on-start: true
    uri: jdbc:${DBMS:postgresql}://127.0.0.1:5432/tanagra_db
    username: dbuser
    password: dbpwd

  access-control:
    model: OPEN_ACCESS # VUMC_ADMIN, VERILY_GROUP
    params: []
    base-path:
    oauth-client-id:

  export:
    shared:
      gcs-bucket-project-id: broad-tanagra-dev
      gcs-bucket-names: broad-tanagra-dev-bq-export
    models:
      -
        type: INDIVIDUAL_FILE_DOWNLOAD
      -
        type: IPYNB_FILE_DOWNLOAD
      -
        name: VWB_FILE_IMPORT_DEVEL
        displayName: Import to VWB (devel)
        type: VWB_FILE_IMPORT
        redirect-away-url: https://terra-devel-ui-terra.api.verily.com/import?urlList=${tsvFileUrl}&returnUrl=${redirectBackUrl}&returnApp=Tanagra

logging.pattern.level: '%X{requestId} %5p'
logging.level.bio.terra.tanagra: DEBUG

server:
  compression:
    enabled: true
    mime-types: text/css,application/javascript
  port: 8080

spring:
  application.name: tanagra
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 0
          must-revalidate: true
        use-last-modified: false
      static-locations: classpath:/api/
