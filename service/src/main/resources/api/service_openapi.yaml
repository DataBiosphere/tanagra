openapi: 3.0.3
info:
  title: Tanagra Service API
  description: github.com/DataBiosphere/tanagra
  version: 0.0.1

servers:
- url: /

security:
- bearerAuth: []
- authorization: [ openid, email, profile ]

paths:
  # --------------- Unauthenticated Paths ---------------

  /status:
    get:
      security: [ ]
      description: Returns the operational status of the service
      operationId: serviceStatus
      tags: [ Unauthenticated ]
      responses:
        200:
          description: Service can process requests
        500:
          description: Service cannot process requests. That might be because
            dependent services are unavailable, or because there is a problem
            with the service itself

  /version:
    get:
      security: [ ]
      description: Returns the deployed version of the service
      operationId: serviceVersion
      tags: [ Public ]
      responses:
        200:
          description: Version properties
          content:
            application/json:
              schema:
                $ref: './common.yaml#/components/schemas/SystemVersion'

  # --------------- Users ---------------

  /v2/profile:
    $ref: './users.yaml#/paths/~1getMe'

  # --------------- Underlays ---------------

  /v2/underlays:
    $ref: './underlays.yaml#/paths/~1listUnderlaySummaries'

  /v2/underlays/{underlayName}:
    $ref: './underlays.yaml#/paths/~1getUnderlay'

  # --------------- Underlays - Entities ---------------

  /v2/underlays/{underlayName}/entities:
    $ref: './underlays_entity.yaml#/paths/~1listEntities'

  /v2/underlays/{underlayName}/entities/{entityName}:
    $ref: './underlays_entity.yaml#/paths/~1getEntity'

  /v2/underlays/{underlayName}/entities/{entityName}/instances:
    $ref: './underlays_entity.yaml#/paths/~1listInstances'

  /v2/underlays/{underlayName}/entities/{entityName}/instancesForPrimaryEntity:
    $ref: './underlays_entity.yaml#/paths/~1listInstancesForPrimaryEntity'

  /v2/underlays/{underlayName}/entities/{entityName}/counts:
    $ref: './underlays_entity.yaml#/paths/~1countInstances'

  /v2/underlays/{underlayName}/entities/{entityName}/hints:
    $ref: './underlays_entity.yaml#/paths/~1queryHints'

  # --------------- Underlays: Export ---------------

  /v2/underlays/{underlayName}/exportModels":
    $ref: './export.yaml#/paths/~1listExportModels'

  /v2/underlays/{underlayName}/entities/{entityName}/previewExport:
    $ref: './export.yaml#/paths/~1previewExportInstances'

  /v2/underlays/{underlayName}/describeExport:
    $ref: './export.yaml#/paths/~1describeExport'

  /v2/underlays/{underlayName}/export:
    $ref: './export.yaml#/paths/~1exportInstancesAndAnnotations'

  # --------------- Studies ---------------

  /v2/studies:
    $ref: './studies.yaml#/paths/~1createListStudy'

  /v2/studies/{studyId}:
    $ref: './studies.yaml#/paths/~1getUpdateDeleteStudy'

  /v2/studies/{studyId}/properties:
    $ref: './studies.yaml#/paths/~1updateDeleteStudyProperties'

  # --------------- Studies - Cohorts ---------------

  /v2/studies/{studyId}/cohorts:
    $ref: './cohorts.yaml#/paths/~1createListCohort'

  /v2/studies/{studyId}/cohorts/{cohortId}:
    $ref: './cohorts.yaml#/paths/~1getUpdateDeleteCohort'

  /v2/studies/{studyId}/cohorts/{cohortId}/counts:
    $ref: './cohorts.yaml#/paths/~1queryCohortCounts'

  # --------------- Studies - Cohorts - Reviews ---------------

  /v2/studies/{studyId}/cohorts/{cohortId}/reviews:
    $ref: './reviews.yaml#/paths/~1createListReview'

  /v2/studies/{studyId}/cohorts/{cohortId}/reviews/{reviewId}:
    $ref: './reviews.yaml#/paths/~1getUpdateDeleteReview'

  /v2/studies/{studyId}/cohorts/{cohortId}/reviews/{reviewId}/instances:
    $ref: './reviews.yaml#/paths/~1listReviewInstancesAndAnnotations'

  /v2/studies/{studyId}/cohorts/{cohortId}/reviews/{reviewId}/counts:
    $ref: './reviews.yaml#/paths/~1countReviewInstances'

  # --------------- Studies - Cohorts - Annotations ---------------

  /v2/studies/{studyId}/cohorts/{cohortId}/annotations:
    $ref: './annotations.yaml#/paths/~1createListAnnotationKey'

  /v2/studies/{studyId}/cohorts/{cohortId}/annotations/{annotationId}:
    $ref: './annotations.yaml#/paths/~1getUpdateDeleteAnnotationKey'

  /v2/studies/{studyId}/cohorts/{cohortId}/annotations/{annotationId}/reviews/{reviewId}/values/{instanceId}:
    $ref: './annotations.yaml#/paths/~1createDeleteAnnotationValue'

  # --------------- Studies - ConceptSets ---------------

  /v2/studies/{studyId}/conceptSets:
    $ref: './conceptSets.yaml#/paths/~1createListConceptSet'

  /v2/studies/{studyId}/cohorts/{conceptSetId}:
    $ref: './conceptSets.yaml#/paths/~1getUpdateDeleteConceptSet'

  # --------------- Activity log ---------------

  /v2/activityLogEntries:
    $ref: './activityLog.yaml#/paths/~1listActivityLogEntries'

  /v2/activityLogEntries/{activityLogEntryId}:
    $ref: './activityLog.yaml#/paths/~1getActivityLogEntry'

  # --------------- (Misc) Test ---------------

  /v2/vumc-admin-service-test:
    $ref: './test.yaml#/paths/~1vumcAdminServiceTest'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
