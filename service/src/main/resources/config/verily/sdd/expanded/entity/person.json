{
  "name" : "person",
  "idAttribute" : "id",
  "attributes" : [ {
    "type" : "KEY_AND_DISPLAY",
    "name" : "gender",
    "dataType" : "INT64",
    "displayHint" : {
      "type" : "ENUM",
      "enumVals" : [ {
        "enumVal" : {
          "value" : {
            "int64Val" : 8532
          },
          "display" : "FEMALE"
        },
        "count" : 1850236
      }, {
        "enumVal" : {
          "value" : {
            "int64Val" : 8507
          },
          "display" : "MALE"
        },
        "count" : 1594485
      }, {
        "enumVal" : {
          "value" : {
            "int64Val" : 0
          },
          "display" : "No matching concept"
        },
        "count" : 4177
      } ]
    },
    "displayHintTypes" : [ ]
  }, {
    "type" : "KEY_AND_DISPLAY",
    "name" : "race",
    "dataType" : "INT64",
    "displayHint" : {
      "type" : "ENUM",
      "enumVals" : [ {
        "enumVal" : {
          "value" : {
            "int64Val" : 8657
          },
          "display" : "American Indian or Alaska Native"
        },
        "count" : 4572
      }, {
        "enumVal" : {
          "value" : {
            "int64Val" : 8515
          },
          "display" : "Asian"
        },
        "count" : 45958
      }, {
        "enumVal" : {
          "value" : {
            "int64Val" : 38003598
          },
          "display" : "Black"
        },
        "count" : 327829
      }, {
        "enumVal" : {
          "value" : {
            "int64Val" : 0
          },
          "display" : "No matching concept"
        },
        "count" : 953870
      }, {
        "enumVal" : {
          "value" : {
            "int64Val" : 8527
          },
          "display" : "White"
        },
        "count" : 2116669
      } ]
    },
    "displayHintTypes" : [ ]
  }, {
    "type" : "KEY_AND_DISPLAY",
    "name" : "ethnicity",
    "dataType" : "INT64",
    "displayHint" : {
      "type" : "ENUM",
      "enumVals" : [ {
        "enumVal" : {
          "value" : {
            "int64Val" : 38003563
          },
          "display" : "Hispanic or Latino"
        },
        "count" : 113110
      }, {
        "enumVal" : {
          "value" : {
            "int64Val" : 0
          },
          "display" : "No matching concept"
        },
        "count" : 960195
      }, {
        "enumVal" : {
          "value" : {
            "int64Val" : 38003564
          },
          "display" : "Not Hispanic or Latino"
        },
        "count" : 2375593
      } ]
    },
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "biovu_sample_has_plasma",
    "dataType" : "BOOLEAN",
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "biovu_sample_dna_yield",
    "dataType" : "INT64",
    "displayHint" : {
      "type" : "RANGE",
      "minVal" : -99999.0,
      "maxVal" : 500.0
    },
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "biovu_sample_is_compromised",
    "dataType" : "BOOLEAN",
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "id",
    "dataType" : "INT64",
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "age",
    "dataType" : "INT64",
    "displayHint" : {
      "type" : "RANGE",
      "minVal" : -971.0,
      "maxVal" : 224.0
    },
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "has_biovu_sample",
    "dataType" : "BOOLEAN",
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "biovu_sample_is_nonshippable",
    "dataType" : "BOOLEAN",
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "year_of_birth",
    "dataType" : "INT64",
    "displayHint" : {
      "type" : "RANGE",
      "minVal" : 1799.0,
      "maxVal" : 2993.0
    },
    "displayHintTypes" : [ ]
  } ],
  "sourceDataMapping" : {
    "dataPointer" : "omop_dataset",
    "tablePointer" : {
      "rawSql" : "SELECT     /* Can't do \"*\". During expansion, there's an error about person_id column being ambiguous. */     p.person_id, p.year_of_birth, p.birth_datetime, p.gender_concept_id, p.race_concept_id, p.ethnicity_concept_id,      /* Add BioVU sample columns. The way x_biovu_sample_status is created, there should be at        most one row per person. */     EXISTS         (SELECT 1 FROM `victr-tanagra-test.sd_static.x_biovu_sample_status` x WHERE p.person_id = x.person_id)                                                                                                         AS has_biovu_sample,     x.dna_yield_ind AS biovu_sample_dna_yield,     /* As a courtesy, convert string fields to boolean: 0 -> No, 1 -> Yes */     CASE WHEN x.compromise_ind = '1' THEN true WHEN x.compromise_ind = '0' THEN false ELSE null END AS biovu_sample_is_compromised,     CASE WHEN x.nonshippable_ind = '1' THEN true WHEN x.nonshippable_ind = '0' THEN false ELSE null END AS biovu_sample_is_nonshippable,     CASE WHEN x.plasma_ind = '1' THEN true WHEN x.plasma_ind = '0' THEN false ELSE null END AS biovu_sample_has_plasma FROM `victr-tanagra-test.sd_static.person` p     LEFT OUTER JOIN         (             /* Get rid of duplicate rows in x_biovu_sample_status. For example, person             4587323 has 11 duplicate rows. This returns just 1 row for each person. */             WITH x_biovu_sample_status AS (                 SELECT                 *,                 ROW_NUMBER() OVER(PARTITION BY person_id) AS rn                 FROM `victr-tanagra-test.sd_static.x_biovu_sample_status`             )             SELECT * FROM x_biovu_sample_status WHERE rn = 1         ) x         ON p.person_id = x.person_id "
    },
    "attributeMappings" : {
      "gender" : {
        "value" : {
          "column" : "gender_concept_id",
          "runtimeCalculated" : false
        },
        "display" : {
          "column" : "gender_concept_id",
          "foreignTable" : "concept",
          "foreignKey" : "concept_id",
          "foreignColumn" : "concept_name",
          "runtimeCalculated" : false
        }
      },
      "race" : {
        "value" : {
          "column" : "race_concept_id",
          "runtimeCalculated" : false
        },
        "display" : {
          "column" : "race_concept_id",
          "foreignTable" : "concept",
          "foreignKey" : "concept_id",
          "foreignColumn" : "concept_name",
          "runtimeCalculated" : false
        }
      },
      "ethnicity" : {
        "value" : {
          "column" : "ethnicity_concept_id",
          "runtimeCalculated" : false
        },
        "display" : {
          "column" : "ethnicity_concept_id",
          "foreignTable" : "concept",
          "foreignKey" : "concept_id",
          "foreignColumn" : "concept_name",
          "runtimeCalculated" : false
        }
      },
      "biovu_sample_has_plasma" : {
        "value" : {
          "column" : "biovu_sample_has_plasma",
          "runtimeCalculated" : false
        }
      },
      "biovu_sample_dna_yield" : {
        "value" : {
          "column" : "biovu_sample_dna_yield",
          "runtimeCalculated" : false
        }
      },
      "biovu_sample_is_compromised" : {
        "value" : {
          "column" : "biovu_sample_is_compromised",
          "runtimeCalculated" : false
        }
      },
      "id" : {
        "value" : {
          "column" : "person_id",
          "runtimeCalculated" : false
        }
      },
      "age" : {
        "value" : {
          "column" : "birth_datetime",
          "sqlFunctionWrapper" : "CAST(FLOOR(TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), ${fieldSql}, DAY) / 365.25) AS INT64)",
          "runtimeCalculated" : true
        }
      },
      "has_biovu_sample" : {
        "value" : {
          "column" : "has_biovu_sample",
          "runtimeCalculated" : false
        }
      },
      "biovu_sample_is_nonshippable" : {
        "value" : {
          "column" : "biovu_sample_is_nonshippable",
          "runtimeCalculated" : false
        }
      },
      "year_of_birth" : {
        "value" : {
          "column" : "year_of_birth",
          "runtimeCalculated" : false
        }
      }
    },
    "hierarchyMappings" : { }
  },
  "indexDataMapping" : {
    "dataPointer" : "index_dataset",
    "tablePointer" : {
      "table" : "person"
    },
    "attributeMappings" : {
      "gender" : {
        "value" : {
          "column" : "gender",
          "runtimeCalculated" : false
        },
        "display" : {
          "column" : "t_display_gender",
          "runtimeCalculated" : false
        }
      },
      "race" : {
        "value" : {
          "column" : "race",
          "runtimeCalculated" : false
        },
        "display" : {
          "column" : "t_display_race",
          "runtimeCalculated" : false
        }
      },
      "ethnicity" : {
        "value" : {
          "column" : "ethnicity",
          "runtimeCalculated" : false
        },
        "display" : {
          "column" : "t_display_ethnicity",
          "runtimeCalculated" : false
        }
      },
      "biovu_sample_has_plasma" : {
        "value" : {
          "column" : "biovu_sample_has_plasma",
          "runtimeCalculated" : false
        }
      },
      "biovu_sample_dna_yield" : {
        "value" : {
          "column" : "biovu_sample_dna_yield",
          "runtimeCalculated" : false
        }
      },
      "biovu_sample_is_compromised" : {
        "value" : {
          "column" : "biovu_sample_is_compromised",
          "runtimeCalculated" : false
        }
      },
      "id" : {
        "value" : {
          "column" : "id",
          "runtimeCalculated" : false
        }
      },
      "age" : {
        "value" : {
          "column" : "age",
          "sqlFunctionWrapper" : "CAST(FLOOR(TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), ${fieldSql}, DAY) / 365.25) AS INT64)",
          "runtimeCalculated" : true
        }
      },
      "has_biovu_sample" : {
        "value" : {
          "column" : "has_biovu_sample",
          "runtimeCalculated" : false
        }
      },
      "biovu_sample_is_nonshippable" : {
        "value" : {
          "column" : "biovu_sample_is_nonshippable",
          "runtimeCalculated" : false
        }
      },
      "year_of_birth" : {
        "value" : {
          "column" : "year_of_birth",
          "runtimeCalculated" : false
        }
      }
    },
    "hierarchyMappings" : { }
  },
  "sourceStartDateColumn" : {
    "column" : "birth_datetime",
    "runtimeCalculated" : false
  }
}