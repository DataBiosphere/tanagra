{
  "name" : "procedure",
  "idAttribute" : "id",
  "attributes" : [ {
    "type" : "KEY_AND_DISPLAY",
    "name" : "standard_concept",
    "dataType" : "STRING",
    "displayHint" : {
      "type" : "ENUM",
      "enumVals" : [ {
        "enumVal" : {
          "value" : {
            "stringVal" : "S"
          },
          "display" : "Standard"
        },
        "count" : 262341
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : ""
          },
          "display" : "Unknown"
        },
        "count" : 458585
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "C"
          },
          "display" : "Unknown"
        },
        "count" : 3064
      } ]
    },
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "vocabulary",
    "dataType" : "STRING",
    "displayHint" : {
      "type" : "ENUM",
      "enumVals" : [ {
        "enumVal" : {
          "value" : {
            "stringVal" : "CCAM"
          },
          "display" : "CCAM"
        },
        "count" : 10206
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "CIEL"
          },
          "display" : "CIEL"
        },
        "count" : 648
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "CIM10"
          },
          "display" : "CIM10"
        },
        "count" : 195
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "CPT4"
          },
          "display" : "CPT4"
        },
        "count" : 13143
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "EDI"
          },
          "display" : "EDI"
        },
        "count" : 249785
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "HCPCS"
          },
          "display" : "HCPCS"
        },
        "count" : 1289
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "HemOnc"
          },
          "display" : "HemOnc"
        },
        "count" : 92
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "ICD10"
          },
          "display" : "ICD10"
        },
        "count" : 161
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "ICD10CM"
          },
          "display" : "ICD10CM"
        },
        "count" : 6
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "ICD10CN"
          },
          "display" : "ICD10CN"
        },
        "count" : 386
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "ICD10GM"
          },
          "display" : "ICD10GM"
        },
        "count" : 157
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "ICD10PCS"
          },
          "display" : "ICD10PCS"
        },
        "count" : 194874
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "ICD9CM"
          },
          "display" : "ICD9CM"
        },
        "count" : 177
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "ICD9Proc"
          },
          "display" : "ICD9Proc"
        },
        "count" : 4657
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "ICD9ProcCN"
          },
          "display" : "ICD9ProcCN"
        },
        "count" : 13385
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "KCD7"
          },
          "display" : "KCD7"
        },
        "count" : 165
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "MeSH"
          },
          "display" : "MeSH"
        },
        "count" : 951
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "NAACCR"
          },
          "display" : "NAACCR"
        },
        "count" : 710
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "Nebraska Lexicon"
          },
          "display" : "Nebraska Lexicon"
        },
        "count" : 72683
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "OMOP Extension"
          },
          "display" : "OMOP Extension"
        },
        "count" : 1
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "OPCS4"
          },
          "display" : "OPCS4"
        },
        "count" : 9750
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "OPS"
          },
          "display" : "OPS"
        },
        "count" : 41101
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "OXMIS"
          },
          "display" : "OXMIS"
        },
        "count" : 1193
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "Read"
          },
          "display" : "Read"
        },
        "count" : 20973
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "SNOMED"
          },
          "display" : "SNOMED"
        },
        "count" : 86910
      }, {
        "enumVal" : {
          "value" : {
            "stringVal" : "SNOMED Veterinary"
          },
          "display" : "SNOMED Veterinary"
        },
        "count" : 392
      } ]
    },
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "name",
    "dataType" : "STRING",
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "concept_code",
    "dataType" : "STRING",
    "displayHintTypes" : [ ]
  }, {
    "type" : "SIMPLE",
    "name" : "id",
    "dataType" : "INT64",
    "displayHintTypes" : [ ]
  } ],
  "sourceDataMapping" : {
    "dataPointer" : "omop_dataset",
    "tablePointer" : {
      "table" : "concept",
      "filter" : {
        "type" : "BINARY",
        "field" : {
          "column" : "domain_id",
          "runtimeCalculated" : false
        },
        "operator" : "EQUALS",
        "value" : {
          "stringVal" : "Procedure"
        }
      }
    },
    "attributeMappings" : {
      "standard_concept" : {
        "value" : {
          "column" : "standard_concept",
          "runtimeCalculated" : false
        },
        "display" : {
          "column" : "standard_concept",
          "sqlFunctionWrapper" : "(CASE WHEN ${fieldSql} IS NULL THEN 'Source' WHEN ${fieldSql} = 'S' THEN 'Standard' ELSE 'Unknown' END)",
          "runtimeCalculated" : false
        }
      },
      "vocabulary" : {
        "value" : {
          "column" : "vocabulary_id",
          "runtimeCalculated" : false
        }
      },
      "name" : {
        "value" : {
          "column" : "concept_name",
          "runtimeCalculated" : false
        }
      },
      "concept_code" : {
        "value" : {
          "column" : "concept_code",
          "runtimeCalculated" : false
        }
      },
      "id" : {
        "value" : {
          "column" : "concept_id",
          "runtimeCalculated" : false
        }
      }
    },
    "textSearchMapping" : {
      "searchStringTable" : {
        "tablePointer" : {
          "rawSql" : "SELECT textsearch.id, textsearch.text FROM (      SELECT       c.concept_id AS id, c.concept_name AS text     FROM  `victr-tanagra-test.sd_static.concept` c      UNION ALL      SELECT       c.concept_id AS id, CAST(c.concept_id AS STRING) AS text     FROM  `victr-tanagra-test.sd_static.concept` c      UNION ALL      SELECT       c.concept_id AS id, c.concept_code AS text     FROM  `victr-tanagra-test.sd_static.concept` c ) AS textsearch  JOIN `victr-tanagra-test.sd_static.concept` c ON c.concept_id = textsearch.id  WHERE c.domain_id = 'Procedure' "
        },
        "fieldPointers" : {
          "id" : {
            "column" : "id",
            "runtimeCalculated" : false
          },
          "text" : {
            "column" : "text",
            "runtimeCalculated" : false
          }
        }
      }
    },
    "hierarchyMappings" : {
      "standard" : {
        "childParent" : {
          "tablePointer" : {
            "rawSql" : "SELECT   cr.concept_id_1 AS parent,   cr.concept_id_2 AS child, FROM `victr-tanagra-test.sd_static.concept_relationship` cr JOIN `victr-tanagra-test.sd_static.concept` c1  ON c1.concept_id = cr.concept_id_1 JOIN `victr-tanagra-test.sd_static.concept` c2  ON c2.concept_id = cr.concept_id_2 WHERE   cr.relationship_id = 'Subsumes'   AND c1.domain_id = c2.domain_id   AND c2.domain_id = 'Procedure'   AND c1.vocabulary_id = c2.vocabulary_id   AND c2.vocabulary_id = 'SNOMED'"
          },
          "fieldPointers" : {
            "parent" : {
              "column" : "parent",
              "runtimeCalculated" : false
            },
            "child" : {
              "column" : "child",
              "runtimeCalculated" : false
            }
          }
        },
        "rootNodesFilter" : {
          "tablePointer" : {
            "table" : "concept",
            "filter" : {
              "type" : "BINARY",
              "field" : {
                "column" : "concept_id",
                "runtimeCalculated" : false
              },
              "operator" : "EQUALS",
              "value" : {
                "int64Val" : 4322976
              }
            }
          },
          "fieldPointers" : {
            "id" : {
              "column" : "concept_id",
              "runtimeCalculated" : false
            }
          }
        },
        "maxHierarchyDepth" : 19
      }
    }
  },
  "indexDataMapping" : {
    "dataPointer" : "index_dataset",
    "tablePointer" : {
      "table" : "procedure"
    },
    "attributeMappings" : {
      "standard_concept" : {
        "value" : {
          "column" : "standard_concept",
          "runtimeCalculated" : false
        },
        "display" : {
          "column" : "t_display_standard_concept",
          "runtimeCalculated" : false
        }
      },
      "vocabulary" : {
        "value" : {
          "column" : "vocabulary",
          "runtimeCalculated" : false
        }
      },
      "name" : {
        "value" : {
          "column" : "name",
          "runtimeCalculated" : false
        }
      },
      "concept_code" : {
        "value" : {
          "column" : "concept_code",
          "runtimeCalculated" : false
        }
      },
      "id" : {
        "value" : {
          "column" : "id",
          "runtimeCalculated" : false
        }
      }
    },
    "textSearchMapping" : {
      "searchString" : {
        "column" : "text",
        "runtimeCalculated" : false
      }
    },
    "hierarchyMappings" : {
      "standard" : {
        "childParent" : {
          "tablePointer" : {
            "table" : "procedure_standard_childParent"
          },
          "fieldPointers" : {
            "parent" : {
              "column" : "parent",
              "runtimeCalculated" : false
            },
            "child" : {
              "column" : "child",
              "runtimeCalculated" : false
            }
          }
        },
        "ancestorDescendant" : {
          "tablePointer" : {
            "table" : "procedure_standard_ancestorDescendant"
          },
          "fieldPointers" : {
            "ancestor" : {
              "column" : "ancestor",
              "runtimeCalculated" : false
            },
            "descendant" : {
              "column" : "descendant",
              "runtimeCalculated" : false
            }
          }
        },
        "pathNumChildren" : {
          "tablePointer" : {
            "table" : "procedure"
          },
          "fieldPointers" : {
            "path" : {
              "column" : "t_standard_path",
              "runtimeCalculated" : false
            },
            "num_children" : {
              "column" : "t_standard_num_children",
              "runtimeCalculated" : false
            },
            "id" : {
              "column" : "id",
              "runtimeCalculated" : false
            }
          }
        },
        "maxHierarchyDepth" : 19
      }
    }
  },
  "sourceStartDateColumn" : null
}