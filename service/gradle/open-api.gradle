// OpenAPI/Swagger Server Generation
def artifactGroup = "${gradle.tanagraArtifactGroup}"
def openapiOutputDir = "${buildDir}/openapi"

swaggerSources {
    server {
        inputFile = file("${resourceDir}/api/service_openapi.yaml")
        code {
            jvmArgs = [
                '--add-opens=java.base/java.util=ALL-UNNAMED'] // for Java 16+
            language = 'spring'
            library = 'spring-boot'
            outputDir = file(openapiOutputDir)
            components = ['models', 'apis']
            rawOptions = [
                '--api-package',
                "${artifactGroup}.generated.controller",
                '--model-package',
                "${artifactGroup}.generated.model",
                '--model-name-prefix',
                'Api',
                '--additional-properties',
                'errorOnUnknownEnum=true',
                '-D',
                'interfaceOnly=true,' +
                'useTags=true,' +
                'dateLibrary=java8,' +
                'jakarta=true'
            ]
        }
    }
}

sourceSets.main.java.srcDir "${openapiOutputDir}/src/main/java"

apply from: "${rootDir}/gradle/version-properties.gradle"

tasks.compileJava.dependsOn(swaggerSources.server.code, generateVersionProperties)
tasks.spotlessJava.dependsOn(generateSwaggerCodeServer)
