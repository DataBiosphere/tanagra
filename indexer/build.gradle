plugins {
    id "java"
    id 'java-test-fixtures'

    // See /buildSrc/build.gradle
    id 'tanagra.java-conventions'
}

sourceCompatibility = JavaVersion.VERSION_11

ext {
    resourceDir = "${projectDir}/src/main/resources"
}

repositories {
    mavenCentral()
    maven {
        url "https://broadinstitute.jfrog.io/broadinstitute/libs-release/"
    }
    maven {
        url "https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/"
    }
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

dependencies {
    ext {
        beam = "2.43.0"
    }
    implementation project(":underlay")
    testImplementation(testFixtures(project(":underlay")))

    implementation group: "bio.terra", name: "terra-common-lib", version: "0.0.69-SNAPSHOT"
    implementation group: "org.apache.commons", name: "commons-text", version: "1.9"

    // GCP BOM version controlled libraries. GCP BOM specified in buildSrc/
    implementation group: "com.google.cloud", name: "google-cloud-bigquery"
    implementation group: "com.google.guava", name: "guava"

    // Beam libraries
    implementation "org.apache.beam:beam-sdks-java-core:${beam}"
    implementation "org.apache.beam:beam-sdks-java-io-google-cloud-platform:${beam}"
    implementation "org.apache.beam:beam-sdks-java-io-jdbc:${beam}"
    implementation "org.apache.beam:beam-sdks-java-extensions-google-cloud-platform-core:${beam}"
    implementation "org.apache.beam:beam-sdks-java-extensions-join-library:${beam}"
    testRuntimeClasspath "org.apache.beam:beam-runners-direct-java:${beam}"
    implementation "org.apache.beam:beam-runners-google-cloud-dataflow-java:${beam}"
    implementation "org.apache.beam:beam-runners-direct-java:${beam}"

    // Apache Beam depends on JUnit 4.13.1, so this sub-project can't use JUnit 5 like the other sub-projects.
    // https://github.com/apache/beam/blob/dd2f67bb8ec49e542635035743a754421cce3a75/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy#L595
    testImplementation "junit:junit:4.13.1" // 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.8.2" // 'org.junit.jupiter:junit-jupiter-engine:5.0.3'

    // Static analysis
    compileOnly "com.google.code.findbugs:annotations:3.0.1u2"
    testCompileOnly "com.google.code.findbugs:annotations:3.0.1u2"
}

test {
    useJUnitPlatform()

    // These System properties are used for the generated SQL strings to compare against during tests.
    // See bio.terra.tanagra.aousynthetic.GeneratedSqlUtils for how they are used.
    systemProperty("GRADLE_PROJECT_DIR", projectDir)
    if (project.findProperty("generateSqlFiles")) {
        systemProperty("GENERATE_SQL_FILES", "true")
    }
}

// e.g. ./gradlew indexer:index -Dexec.args="input_underlay.json output_dir"
task index (type:JavaExec) {
    main = "bio.terra.tanagra.indexing.Main"
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
    args System.getProperty("exec.args", "").split()

    // Needed to avoid OOM in GHA. Not sure why this isn't needed for local runs.
    // https://github.com/DataBiosphere/tanagra/actions/runs/4547100642/jobs/8016560406
    // https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
    jvmArgs "-Xmx7000m", "-XX:+HeapDumpOnOutOfMemoryError"
}
