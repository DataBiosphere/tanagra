plugins {
    id 'application'
    id 'tanagra.java-conventions'
}

sourceCompatibility = JavaVersion.VERSION_17

ext {
    resourceDir = "${projectDir}/src/main/resources"
}

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

dependencies {
    // added to address snyk warnings
    constraints {
        implementation 'org.apache.commons:commons-compress:1.26.2'
        implementation "io.netty:netty-codec-http2:${vIoNetty}"
        implementation 'org.apache.avro:avro:1.11.4'
        runtimeOnly 'com.charleskorn.kaml:kaml:0.60.0'

        // added to use same netty versions across subprojects
        implementation "io.netty:netty-codec-socks:${vIoNetty}"
        implementation "io.netty:netty-handler-proxy:${vIoNetty}"
        implementation "io.netty:netty-tcnative-boringssl-static:${vIoNettyNative}"
        implementation "io.netty:netty-tcnative-classes:${vIoNettyNative}"
    }

    implementation project(':underlay')
    testImplementation(testFixtures(project(':underlay')))

    implementation "org.apache.commons:commons-text:${vApacheCommonsText}"
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'

    // Command parsing
    implementation project(':cli')
    compileOnly "info.picocli:picocli:${vPicocliVersion}"
    annotationProcessor "info.picocli:picocli-codegen:${vPicocliVersion}"

    // GCP libraries versions are controlled by the BOM specified in buildSrc.
    implementation 'com.google.cloud:google-cloud-bigquery'
    implementation 'com.google.guava:guava'

    // Apache Beam libraries
    String vApacheBeam = '2.56.0'
    implementation "org.apache.beam:beam-sdks-java-core:${vApacheBeam}"
    implementation "org.apache.beam:beam-sdks-java-io-google-cloud-platform:${vApacheBeam}"
    implementation "org.apache.beam:beam-sdks-java-io-jdbc:${vApacheBeam}"
    implementation "org.apache.beam:beam-sdks-java-extensions-google-cloud-platform-core:${vApacheBeam}"
    implementation "org.apache.beam:beam-sdks-java-extensions-join-library:${vApacheBeam}"
    implementation "org.apache.beam:beam-runners-google-cloud-dataflow-java:${vApacheBeam}"
    implementation "org.apache.beam:beam-runners-direct-java:${vApacheBeam}"
    testImplementation "org.apache.beam:beam-runners-direct-java:${vApacheBeam}"

    // Apache Beam depends on specific JUnit versions
    // https://github.com/apache/beam/blob/release-2.56.0/buildSrc/src/main/groovy/org/apache/beam/gradle/BeamModulePlugin.groovy
    testImplementation 'junit:junit:4.13.1'
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${vJunit5}"

    // Static analysis
    pmd "net.sourceforge.pmd:pmd-ant:${vPmd}"
    compileOnly "com.github.spotbugs:spotbugs-annotations:${vSpotBugs}"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:${vSpotBugs}"
}

tasks.withType(Test).configureEach {
    // These System properties are used for the generated SQL strings to compare against during tests.
    // See bio.terra.tanagra.testing.GeneratedSqlUtils for how they are used.
    systemProperty('GRADLE_PROJECT_DIR', projectDir)
    if (project.findProperty('generateSqlFiles')) {
        systemProperty('GENERATE_SQL_FILES', 'true')
    }
}

tasks.withType(Checkstyle).configureEach {
    // https://github.com/gradle/gradle/issues/22562
    maxHeapSize.set("2g")
}

application {
    mainClass = 'bio.terra.tanagra.indexing.cli.Main'
    applicationName = 'tanagra'
    executableDir = 'bin'

    // TODO: Suppress Jersey PATCH related warnings.
    applicationDefaultJvmArgs = [
        '--add-opens',
        'java.base/sun.net.www.protocol.https=ALL-UNNAMED',
        '--add-opens',
        'java.base/java.net=ALL-UNNAMED'
    ]
}

tasks.register('generateManpageAsciiDoc', JavaExec) {
    dependsOn(classes)
    group = 'documentation'
    description = 'Generate AsciiDoc manpage'
    classpath(configurations.compileClasspath, configurations.annotationProcessor, sourceSets.main.runtimeClasspath)
    main 'picocli.codegen.docgen.manpage.ManPageGenerator'
    args 'bio.terra.tanagra.indexing.cli.Main', '--outdir=$projectDir/../docs/generated/indexer-cli', '--verbose', '--force'
}

apply from: "${rootDir}/gradle/spotless-dependencies.gradle"
apply from: "${rootDir}/gradle/version-properties.gradle"
