plugins {
    id 'tanagra.java-conventions'

    // These plugins are needed to resolve versions of spring dependencies
    // transitively added by terra-common-lib
    id 'io.spring.dependency-management' version "${vSpringDepMgt}"
    id 'org.springframework.boot' version "${vSpringBoot}"
}

sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
    }
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
    }
    maven {
        url 'https://packages.confluent.io/maven/'
    }
    maven {
        name 'github'
        url 'https://maven.pkg.github.com/vanderbilt/tanagra-client-libraries'
        credentials {
            // Credentials required to access tanagra-client-libraries,
            // GITHUB_ACTOR: user running build task
            // GITHUB_TOKEN: user token or workflow token that grants access to libraries
            username = System.getenv('GITHUB_ACTOR')
            password = System.getenv('GITHUB_TOKEN')
        }
    }
}

dependencies {
    // added to address synk warnings
    constraints {
        implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'
    }

    implementation "org.slf4j:slf4j-api:${vSlf4jApi}"

    implementation("bio.terra:terra-common-lib:${vTerraCommonLib}") {
        exclude group: 'com.azure'
        exclude group: 'io.swagger', module: 'swagger-annotations'
        exclude group: 'io.opentelemetry'
        exclude group: 'io.opentelemetry.instrumentation'
        exclude group: 'org.springframework', module: 'spring-web'
    }

    implementation project(path: ':underlay')
    implementation project(path: ':service')

    // explicity declare libs and version to address synk warnings
    implementation "org.springframework:spring-web:${vSpringWeb}"
    implementation "org.springframework:spring-webmvc:${vSpringWeb}"
    testFixturesImplementation "org.springframework:spring-web:${vSpringWeb}"
    testFixturesImplementation "org.springframework:spring-webmvc:${vSpringWeb}"

    // Static analysis
    pmd "net.sourceforge.pmd:pmd-ant:${vPmd}"
}

// e.g. ./gradlew annotationProcessor:run -Pgenerator=APPLICATION_CONFIG_DOCS
// Possible values for the "generator" property are the Main.Command enum values.
tasks.register('run', JavaExec) {
    mainClass = 'bio.terra.tanagra.annotation.Main'
    classpath = sourceSets.main.runtimeClasspath
    args "${rootDir}", project.hasProperty('generator') ? project.findProperty('generator') : 'undefined'
}

apply from: "${rootDir}/gradle/spotless-dependencies.gradle"
