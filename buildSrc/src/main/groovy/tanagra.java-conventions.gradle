// This defines a Convention Plugin that implements the common logic to use
// for building all Java  projects in the tanagra project.
//
// For more info please see:
//
// https://docs.gradle.org/current/userguide/sharing_build_logic_between_subprojects.html
// https://docs.gradle.org/current/userguide/organizing_gradle_projects.html#sec:build_sources
//

plugins {
    id "idea"
    id "jacoco"
    id "maven-publish"

    // Other tanagra plugin conventions.
    id "tanagra.spotless-conventions"
    id "tanagra.quality-conventions"
    id "tanagra.test-conventions"
}

repositories {
    mavenCentral()
    maven {
        url "https://broadinstitute.jfrog.io/broadinstitute/libs-release/"
    }
    maven {
        url "https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/"
    }
}

sourceCompatibility = JavaVersion.VERSION_11

// see https://docs.gradle.org/current/userguide/dependency_locking.html
//dependencyLocking {
//    lockAllConfigurations()
//    lockMode = LockMode.STRICT
//}

dependencies {
    ext {
        auto_value = "1.8.1"
    }
    implementation group: "com.google.auto.value", name: "auto-value-annotations", version: auto_value
    annotationProcessor group: "com.google.auto.value", name: "auto-value", version: auto_value
    testImplementation group: "com.google.auto.value", name: "auto-value-annotations", version: auto_value
    testAnnotationProcessor group: "com.google.auto.value", name: "auto-value", version: auto_value

    // GCP BOM version controlled libraries
    // See https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/The-Google-Cloud-Platform-Libraries-BOM
    implementation platform(group: "com.google.cloud", name: "libraries-bom", version: "22.0.0")
    constraints {
        // "-jre" for Java 8 or higher
        implementation group: "com.google.guava", name:"guava", version: "30.1.1-jre"
    }
}

// Javadoc
java {
    // Builds Javadoc into the published package as part of the 'assemble' task.
    withJavadocJar()
}

// Use the approach described in the link below to turn off console output
// for warning-level Javadoc errors. We don't require warning-level fixes
// to Javadoc and wish to suppress the noise.
// https://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
